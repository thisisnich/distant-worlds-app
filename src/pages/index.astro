---
import BaseLayout from '../layouts/BaseLayout.astro';

interface PlanetFrontmatter {
    planet_id: string;
    name: string;
    scientific_name: string;
    type: string;
    biome: string;
    gravity_source: string;
    nickname: string;
    atmosphere_type: string;
    primary_resources: string[];
    scientific_interest: string[];
    habitability: string;
    year_length_days: number;
    day_length_hours: number;
    description: string;
    claimed_no?: number; // Optional claim number
}

interface Planet {
    frontmatter: PlanetFrontmatter;
    compiledContent(): string;
}

const allPlanets = Object.values(import.meta.glob<Planet>('../content/*.md', { eager: true }));

console.log(`Found ${allPlanets.length} planets.`);

// Calculate dynamic pricing
const claimedPlanets = allPlanets.filter(planet => planet.frontmatter.claimed_no !== undefined);
const nextClaimPrice = claimedPlanets.length + 1;

// Function to get price for a planet
function getPlanetPrice(planet: Planet): number {
    if (planet.frontmatter.claimed_no !== undefined) {
        return planet.frontmatter.claimed_no;
    }
    return nextClaimPrice;
}

// Function to check if planet is claimed
function isPlanetClaimed(planet: Planet): boolean {
    return planet.frontmatter.claimed_no !== undefined;
}
---

<BaseLayout title="Distant Worlds - Planet Collection">
    <style>
        .hero {
            /* Remove the problematic inline style */
        }
        .claim-status {
            background: rgba(22, 27, 34, 0.2);
            backdrop-filter: blur(4px);
            -webkit-backdrop-filter: blur(4px);
            color: rgba(0, 212, 255, 0.6);
            padding: 10px 20px;
            border-radius: 25px;
            font-weight: 600;
            font-size: 0.85em;
            margin-bottom: 12px;
            text-align: center;
            border: 1px solid rgba(0, 212, 255, 0.1);
            box-shadow: 
                0 0 5px rgba(0, 212, 255, 0.05),
                inset 0 1px 0 rgba(255, 255, 255, 0.03);
            text-transform: uppercase;
            letter-spacing: 1px;
            transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
            position: relative;
            overflow: hidden;
        }
        
        .claim-status::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(0, 212, 255, 0.1), transparent);
            transition: left 0.6s ease;
            opacity: 0;
        }
        
        .claim-status::after {
            content: '';
            position: absolute;
            inset: 0;
            background: linear-gradient(135deg, rgba(0, 212, 255, 0.05) 0%, rgba(29, 78, 216, 0.05) 100%);
            border-radius: 25px;
            opacity: 0;
            transition: opacity 0.4s ease;
        }
        
        .claim-status:hover::before {
            left: 100%;
            opacity: 1;
        }
        
        .claim-status:hover::after {
            opacity: 1;
        }
        
        .claim-status:hover {
            background: rgba(22, 27, 34, 0.8);
            backdrop-filter: blur(12px);
            -webkit-backdrop-filter: blur(12px);
            border-color: rgba(0, 212, 255, 0.5);
            box-shadow: 
                0 0 20px rgba(0, 212, 255, 0.3),
                inset 0 1px 0 rgba(255, 255, 255, 0.1),
                0 4px 20px rgba(0, 0, 0, 0.2);
            color: rgba(0, 212, 255, 1);
            transform: translateY(-1px);
        }
        
        .claim-status.claimed {
            background: rgba(22, 34, 22, 0.2);
            color: rgba(0, 255, 136, 0.6);
            border-color: rgba(0, 255, 136, 0.1);
            box-shadow: 
                0 0 5px rgba(0, 255, 136, 0.05),
                inset 0 1px 0 rgba(255, 255, 255, 0.03);
        }
        
        .claim-status.claimed::before {
            background: linear-gradient(90deg, transparent, rgba(0, 255, 136, 0.1), transparent);
        }
        
        .claim-status.claimed::after {
            background: linear-gradient(135deg, rgba(0, 255, 136, 0.05) 0%, rgba(34, 197, 94, 0.05) 100%);
        }
        
        .claim-status.claimed:hover {
            background: rgba(22, 34, 22, 0.8);
            border-color: rgba(0, 255, 136, 0.5);
            box-shadow: 
                0 0 20px rgba(0, 255, 136, 0.3),
                inset 0 1px 0 rgba(255, 255, 255, 0.1),
                0 4px 20px rgba(0, 0, 0, 0.2);
            color: rgba(0, 255, 136, 1);
        }
        
        .price-tag {
            background: rgba(22, 27, 34, 0.15);
            backdrop-filter: blur(4px);
            -webkit-backdrop-filter: blur(4px);
            color: rgba(147, 51, 234, 0.8);
            padding: 8px 16px;
            border-radius: 18px;
            font-weight: 700;
            font-size: 0.9em;
            display: inline-block;
            margin-bottom: 12px;
            border: 1px solid rgba(147, 51, 234, 0.15);
            box-shadow: 
                0 0 8px rgba(147, 51, 234, 0.08),
                inset 0 1px 0 rgba(255, 255, 255, 0.05);
            text-transform: uppercase;
            letter-spacing: 0.5px;
            transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
            position: relative;
            overflow: hidden;
        }
        
        .price-tag::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(147, 51, 234, 0.15), transparent);
            transition: left 0.6s ease;
            opacity: 0;
        }
        
        .price-tag::after {
            content: '';
            position: absolute;
            inset: 0;
            background: linear-gradient(135deg, rgba(147, 51, 234, 0.1) 0%, rgba(168, 85, 247, 0.1) 100%);
            border-radius: 18px;
            opacity: 0;
            transition: opacity 0.4s ease;
        }
        
        .price-tag:hover::before {
            left: 100%;
            opacity: 1;
        }
        
        .price-tag:hover::after {
            opacity: 1;
        }
        
        .price-tag:hover {
            background: linear-gradient(135deg, rgba(45, 27, 105, 0.9) 0%, rgba(107, 70, 193, 0.9) 50%, rgba(147, 51, 234, 0.9) 100%);
            backdrop-filter: blur(12px);
            -webkit-backdrop-filter: blur(12px);
            transform: translateY(-2px);
            border-color: rgba(147, 51, 234, 0.6);
            box-shadow: 
                0 0 25px rgba(147, 51, 234, 0.4),
                inset 0 1px 0 rgba(255, 255, 255, 0.2),
                0 8px 25px rgba(0, 0, 0, 0.25);
            color: #ffffff;
        }
        .pricing-info {
            background: rgba(22, 27, 34, 0.3); /* Updated to match card opacity */
            backdrop-filter: blur(8px); /* Updated to match card blur */
            -webkit-backdrop-filter: blur(8px); /* Updated to match card blur */
            border: 1px solid rgba(48, 54, 61, 0.5); /* Updated to match card border */
            color: white;
            padding: 1.5rem;
            border-radius: 16px; /* Updated to match card border-radius */
            text-align: center;
            margin-bottom: 2rem;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2), 0 0 0 1px rgba(255, 255, 255, 0.05); /* Updated to match card shadow */
            transition: transform 0.4s ease, box-shadow 0.4s ease, backdrop-filter 0.4s ease; /* Updated from card */
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; /* Re-added for vibrant pop */
            position: relative; /* Essential for ::before positioning */
            overflow: hidden; /* Ensures gradient is clipped within bounds */
            z-index: 1; /* Ensures it's layered correctly */
        }

        .pricing-info::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: linear-gradient(135deg, #1a2a6c 0%, #b21f1f 50%, #fdbb2d 100%); /* The vibrant gradient */
            z-index: -1; /* Placed behind the content */
            border-radius: 16px; /* Updated to match parent border-radius */
            opacity: 0.4; /* Increased opacity for vibrancy, still allowing blur */
        }

        .pricing-info:hover {
            transform: translateY(-10px) scale(1.02);
            box-shadow: 0 20px 40px rgba(88, 166, 255, 0.3), 0 0 0 1px rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(12px); /* Increase blur on hover */
            border-color: rgba(88, 166, 255, 0.8);
        }

        .pricing-info p {
            margin: 0.5rem 0;
            font-size: 1.1em;
        }
        .pricing-info strong {
            color: #fdd835; /* Highlight color */
        }
    </style>
    <div class="container">
        <header class="hero">
            <h1 class="title">Distant Worlds</h1>
            <p class="subtitle">Procedural Planet Collection</p>
            <p class="tagline">Minted, not discovered.</p>
        </header>

        <section class="-section">
            <div class="info-grid">
                <div class="info-card">
                    <h3>üåç Weekly Drops</h3>
                    <p>New procedurally generated planets every week</p>
                </div>
                <div class="info-card">
                    <h3>üìà Dynamic Pricing</h3>
                    <p>First claim sets the price, next planet costs $1 more</p>
                </div>
                <div class="info-card">
                    <h3>üé® 100% Human-Made</h3>
                    <p>Created with Blender, no AI generation</p>
                </div>
            </div>
        </section>

        <section class="planets-section">
            <h2 class="section-title">Available Worlds</h2>
            <div class="pricing-info">
                <p><strong>Current Status:</strong> {claimedPlanets.length} planet{claimedPlanets.length !== 1 ? 's' : ''} claimed</p>
                <p><strong>Next Planet Price:</strong> ${nextClaimPrice} USD</p>
            </div>
            <div id="planets-grid" class="planets-grid">
                {
                    allPlanets.map((planet) => {
                        const slug = planet.frontmatter.name.toLowerCase().replace(/[^a-z0-9]+/g, '-').replace(/^-*|-*$/g, '');
                        const imageSlug = planet.frontmatter.name.toLowerCase().replace(/[^a-z0-9]+/g, '_').replace(/^_*|_*$/g, '');
                        const imagePath = `/images/${planet.frontmatter.planet_id.toString().padStart(3, '0')}_${imageSlug}.png`;
                        const isClaimed = isPlanetClaimed(planet);
                        const price = getPlanetPrice(planet);
                        
                        return (
                            <a href={`/planets/${slug}`} class="card-link">
                                <div class="card">
                                    <div class="planet-image">
                                        <img src={imagePath} alt={planet.frontmatter.name} />
                                    </div>
                                    <div class="card-content">
                                        <div class="planet-id">Planet #{planet.frontmatter.planet_id}</div>
                                        <div class={`claim-status ${isClaimed ? 'claimed' : ''}`}>
                                            {isClaimed ? 'CLAIMED' : 'CLICK TO CLAIM'}
                                        </div>
                                        <div class="price-tag">
                                            ${price} USD
                                        </div>
                                        <h2>{planet.frontmatter.name}</h2>
                                        <p><strong>Type:</strong> {planet.frontmatter.type}</p>
                                        <p><strong>Biome:</strong> {planet.frontmatter.biome}</p>
                                        <p>{planet.frontmatter.description}</p>
                                    </div>
                                </div>
                            </a>
                        );
                    })
                }
            </div>
        </section>

        <footer class="footer">
            <p>&copy; 2024 Distant Worlds. All renders are unique digital assets.</p>
        </footer>
    </div>
</BaseLayout>
