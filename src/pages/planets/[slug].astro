---
import BaseLayout from '../../layouts/BaseLayout.astro';

interface PlanetFrontmatter {
    planet_id: string;
    name: string;
    scientific_name: string;
    type: string;
    biome: string;
    gravity_source: string;
    nickname: string;
    atmosphere_type: string;
    primary_resources: string[];
    scientific_interest: string[];
    habitability: string;
    year_length_days: number;
    day_length_hours: number;
    description: string;
}

interface MarkdownModule {
    frontmatter: PlanetFrontmatter;
    compiledContent(): string;
}

export async function getStaticPaths() {
    const planetFiles = Object.values(import.meta.glob<MarkdownModule>('../../content/*.md', { eager: true }));

    return planetFiles.map(planet => ({
        params: { slug: planet.frontmatter.name.toLowerCase().replace(/[^a-z0-9]+/g, '-').replace(/^-*|-*$/g, '') },
        props: { planet },
    }));
}

const { planet } = Astro.props as { planet: MarkdownModule };
const slug = planet.frontmatter.name.toLowerCase().replace(/[^a-z0-9]+/g, '-').replace(/^-*|-*$/g, '');
const imageSlug = planet.frontmatter.name.toLowerCase().replace(/[^a-z0-9]+/g, '_').replace(/^_*|_*$/g, '');
const imagePath = `/images/${planet.frontmatter.planet_id.toString().padStart(3, '0')}_${imageSlug}.png`;

// Get the full compiled markdown content
const fullContent = String(planet.compiledContent());

// Define the header to search for
const extendedLoreHeader = '<h2>Extended Lore (worldbuilding &#x26; deeper reading)</h2>';

// Find the start of the extended lore section
const startIndex = fullContent.indexOf(extendedLoreHeader);

console.log('Full Content:', fullContent);
console.log('Extended Lore Header:', extendedLoreHeader);
console.log('Start Index:', startIndex);

let filteredContent = '';
if (startIndex !== -1) {
    // Extract the content from the extended lore header onwards
    filteredContent = fullContent.substring(startIndex);
    // Replace the extended lore header with the desired "Lore:" header
    filteredContent = filteredContent.replace(extendedLoreHeader, '<h2>Lore:</h2>');
}
---

<BaseLayout title={`Planet ${planet.frontmatter.planet_id}: ${planet.frontmatter.name}`}>
    <div class="planet-hero" style={`background-image: url('${imagePath}')`}>
    </div>

    <div class="container">
        <div class="planet-header-card">
            <div class="planet-id-detail">Planet #{planet.frontmatter.planet_id}</div>
            <h1>{planet.frontmatter.name}</h1>
            <p class="planet-subtitle"><em>{planet.frontmatter.scientific_name}</em></p>
        </div>

        <div class="planet-stats">
            <div class="stat-item">
                <span class="stat-label">Type</span>
                <span class="stat-value">{planet.frontmatter.type}</span>
            </div>
            <div class="stat-item">
                <span class="stat-label">Biome</span>
                <span class="stat-value">{planet.frontmatter.biome}</span>
            </div>
            <div class="stat-item">
                <span class="stat-label">Gravity Source</span>
                <span class="stat-value">{planet.frontmatter.gravity_source}</span>
            </div>
        </div>

        <div class="content-card">
            <h2>Description</h2>
            <p>{planet.frontmatter.description}</p>
        </div>

        <div class="content-card">
            <div class="planet-content" set:html={filteredContent} />
        </div>
    </div>
</BaseLayout> 